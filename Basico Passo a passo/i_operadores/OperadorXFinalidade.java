
package i_operadores;
/*Operadores Aritméticos: Os habituais 

Soma + .
Subtração - .
Multiplicação * .
Divisão / .
Resto da Divisão % .


Operadores de Atribuição: O principal é '=' mas existem mais operadores de atribuição com diferentes funções que explicamos brevemente agora.
'+=' : op1 += op2 à op1 = op1 + op2
'-=' : op1 -= op2 à op1 = op1 - op2
'*=' : op1 *= op2 à op1 = op1 * op2
'/=' : op1 /= op2 à op1 = op1 / op2
'%=' : op1 %= op2 à op1 = op1 % op2

Operadores Unários: O mais (+) e o menos (-). Para mudar o sinal do operando. 

Operador Instanceof: Permite-nos saber se um objeto pertence a uma classe ou não.
NomeObjeto instanceof NomeClasse

Operadores de Incremento e Decremento: São os operadores que nos permitem incrementar as variáveis em uma unidade. Podem ser usados diante ou atrás da variável dependendo do que quisermos, ou seja, se quisermos que se incremente ou vice-versa antes de utilizar ou o contrário.
'++'
'--'

Operadores de Comparação: Permitem comparar variáveis segundo a relação de igualdade/desigualdade o relação maior/menor. Devolvem sempre um valor booleano.
'>':	Maior que
'<':	Menor que
'==':	Iguais
'¡=':	Diferentes
'>=': Maior ou igual que
'<=':	Menor ou igual que

Operadores Lógicos: Permite-nos construir expressões lógicas.
'&&' :	devolve true se ambos operandos forem true.
'||' : devolve true se algum dos operandos for true.
'!' : Nega o operando que se passa.
'&' : devolve true se ambos operandos forem true, avaliando ambos.
'|' : devolve true se um dos operandos for true, avaliando ambos.

Operador de concatenação com cadeia de caracteres '+':
Por Exemplo: System.out.println("O total é"+ result +"unidades");

Operadores que atuam a nível de bits: São muito menos utilizados, por isso os explicamos mais por alto.
'>>': deslocamento à direita dos bits do operando
'<<': deslocamento à esquerda dos bits do operando
'&': operador and a nível de bit.
'|': operador or a nível de bit 
*/

public class OperadorXFinalidade {
   public static void main(String[] args) {
	   //implementar exemplos aqui!
	   
}
}
